worker_processes auto;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    resolver 127.0.0.11 valid=10s;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparams.pem;

    gzip on;
    gzip_disable "msie6";

    server {
        listen      80;
        server_name $domain;

        location /basic_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }


        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen                  443 ssl default_server;
        http2                   on;
        server_name             $domain;
        ssl_certificate         /etc/nginx/certs/live/$domain/fullchain.pem;
        ssl_certificate_key     /etc/nginx/certs/live/$domain/privkey.pem;
        ssl_trusted_certificate /etc/nginx/certs/live/$domain/chain.pem;
        keepalive_timeout       60;

        ssl_stapling            off;
        ssl_stapling_verify     off;
        add_header          Strict-Transport-Security "max-age=31536000" always;

        location / {
            set $jellyfin       http://jellyfin:8096;
            proxy_pass          $jellyfin;
            proxy_http_version  1.1;
            proxy_set_header    Connection "Upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
        }

        location /.well-known {
            alias /etc/nginx/html/.well-known;
        }

        location /jackett {
            return 302 $scheme://$host/jackett/;
        }
        location /jackett/ {
            set $jackett        http://jackett:9117;
            proxy_pass          $jackett;
            proxy_cache_bypass  $http_upgrade;
            proxy_http_version  1.1;
            proxy_set_header    Connection keep-alive;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $http_host;
            proxy_set_header    X-Forwarded-Proto $scheme;
        }

        location /radarr {
            return 302 $scheme://$host/radarr/;
        }
        location /radarr/ {
            set $radarr         http://radarr:7878;
            proxy_pass          $radarr;
            proxy_http_version  1.1;
            proxy_redirect      off;
            proxy_set_header    Connection $http_connection;
            proxy_set_header    Host $http_host;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $http_host;
            proxy_set_header    X-Forwarded-Proto https;
        }

        location /sonarr {
            return 302 $scheme://$host/sonarr/;
        }
        location /sonarr/ {
            set $sonarr         http://sonarr:8989;
            proxy_pass          $sonarr;
            proxy_set_header    Host $http_host;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Real-IP $remote_addr;
        }
    }
}
